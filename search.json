[
  {
    "objectID": "materials/introduction.html",
    "href": "materials/introduction.html",
    "title": "Day-0,1: Data Preperation and Introduction to ggplot2",
    "section": "",
    "text": "Data Preparation\n  \n  Importing data into R\n  Cleaning data\n  \n  Data Visualization\n  \n  Introduction\n  \n  What is ggplot2?\n  \n  \n  References and Additional Materials\n  Materials",
    "crumbs": [
      "Materials",
      "Introduction"
    ]
  },
  {
    "objectID": "materials/introduction.html#importing-data-into-r",
    "href": "materials/introduction.html#importing-data-into-r",
    "title": "Day-0,1: Data Preperation and Introduction to ggplot2",
    "section": "Importing data into R",
    "text": "Importing data into R\nR can import data from almost any source, including text files, excel spreadsheets etc. How do we do it? It is simple:\n\n# Load the library\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nSalaries &lt;- read_csv(file = 'data/Salaries.csv')\n\nRows: 397 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): rank, discipline, sex\ndbl (3): yrs.since.phd, yrs.service, salary\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSalaries &lt;- read_tsv(file = 'data/Salaries.txt')\n\nRows: 397 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (3): rank, discipline, sex\ndbl (3): yrs.since.phd, yrs.service, salary\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# To know more about these function (any function) to check arguments of these functions.\nhelp(\"read_csv\") # ?read_csv ?function would also show the help page.",
    "crumbs": [
      "Materials",
      "Introduction"
    ]
  },
  {
    "objectID": "materials/introduction.html#cleaning-data",
    "href": "materials/introduction.html#cleaning-data",
    "title": "Day-0,1: Data Preperation and Introduction to ggplot2",
    "section": "Cleaning data",
    "text": "Cleaning data\nThe most time consuming part. For this we use tidyR and dplyr packages. There are other ways to do the same. We will use Salaries data set (information about professor’s salaries) for doing these tasks:\n\nUse select function to select some variables (columns)\nUse mutate function to create a new variable.\nUse count function to count a variable\n\n\n# First lets get a glimpse of the data\nglimpse(Salaries)\n\nRows: 397\nColumns: 6\n$ rank          &lt;chr&gt; \"Prof\", \"Prof\", \"AsstProf\", \"Prof\", \"Prof\", \"AssocProf\",…\n$ discipline    &lt;chr&gt; \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"…\n$ yrs.since.phd &lt;dbl&gt; 19, 20, 4, 45, 40, 6, 30, 45, 21, 18, 12, 7, 1, 2, 20, 1…\n$ yrs.service   &lt;dbl&gt; 18, 16, 3, 39, 41, 6, 23, 45, 20, 18, 8, 2, 1, 0, 18, 3,…\n$ sex           &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", …\n$ salary        &lt;dbl&gt; 139750, 173200, 79750, 115000, 141500, 97000, 175000, 14…\n\n# Use select function to select rank and discipline columns\nsubset &lt;- Salaries %&gt;% select(rank,discipline)\nsubset\n\n# A tibble: 397 × 2\n   rank      discipline\n   &lt;chr&gt;     &lt;chr&gt;     \n 1 Prof      B         \n 2 Prof      B         \n 3 AsstProf  B         \n 4 Prof      B         \n 5 Prof      B         \n 6 AssocProf B         \n 7 Prof      B         \n 8 Prof      B         \n 9 Prof      B         \n10 Prof      B         \n# ℹ 387 more rows\n\n# Use mutate to create a new column color using discipline where A:red and B:blue  \nsubset %&gt;% mutate(color=ifelse(discipline=='A','red','blue'))\n\n# A tibble: 397 × 3\n   rank      discipline color\n   &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;\n 1 Prof      B          blue \n 2 Prof      B          blue \n 3 AsstProf  B          blue \n 4 Prof      B          blue \n 5 Prof      B          blue \n 6 AssocProf B          blue \n 7 Prof      B          blue \n 8 Prof      B          blue \n 9 Prof      B          blue \n10 Prof      B          blue \n# ℹ 387 more rows\n\n#Use count function to count ranks\nSalaries %&gt;% count(rank)\n\n# A tibble: 3 × 2\n  rank          n\n  &lt;chr&gt;     &lt;int&gt;\n1 AssocProf    64\n2 AsstProf     67\n3 Prof        266\n\n\nMust read and try to go through Data Transformation section of this book\nDo a read of chapter-2 of this book.",
    "crumbs": [
      "Materials",
      "Introduction"
    ]
  },
  {
    "objectID": "materials/introduction.html#introduction",
    "href": "materials/introduction.html#introduction",
    "title": "Day-0,1: Data Preperation and Introduction to ggplot2",
    "section": "Introduction",
    "text": "Introduction\nR offers multiple systems for creating graphs, but one of the most powerful and flexible is ggplot2.\n\nWhat is ggplot2?\nggplot2 is a data visualization package for R developed by Hadley Wickham that provides a structured approach for visualization. This package is built on the grammar of graphics, a structured approach to designing and constructing visualizations in a consistent and intuitive manner.\n\n\n\n\n\nLets see these in action with the famous iris dataset. First let see a summary of the data.\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\n\nFigure 1 takes in data as the argument which will generate a empty plot.\n\nggplot(iris)\n\n\n\n\n\n\n\nFigure 1: Passing data to ggplot2\n\n\n\n\n\nFigure 2 adds Aesthetics to the plot.\n\nggplot(iris,\n      aes(x=Sepal.Length, y=Sepal.Width, \n          color=Species))\n\n\n\n\n\n\n\nFigure 2: Adding Aesthetics\n\n\n\n\n\nFigure 3 adds Geometries to the plot.\n\nggplot(iris,\n      aes(x=Sepal.Length, y=Sepal.Width, \n          color=Species))+\n  geom_point()\n\n\n\n\n\n\n\nFigure 3: Adding Geometries\n\n\n\n\n\nFigure 4 adds Scale to the plot.\n\nggplot(iris,\n      aes(x=Sepal.Length, y=Sepal.Width, \n          color=Species))+\n  geom_point()+\n  scale_color_brewer(palette = 'Dark2')\n\n\n\n\n\n\n\nFigure 4: Adding Scales\n\n\n\n\n\nFigure 4 adding Stats,theme,facets to the plot.\n\nggplot(iris,\n      aes(x=Sepal.Length, y=Sepal.Width, \n          color=Species)) +\n    geom_point() +\n    scale_color_brewer(palette=\"Dark2\") +\n    stat_summary(fun.y=\"mean\", geom= \"line\") + \n    coord_flip() +\n    facet_wrap(~Species) +\n    theme_bw() + theme(legend.position=\"top\") +\n    annotate(\"text\", x=7.5, y=2.5, label=\"Pval\")\n\n\n\n\n\n\n\nFigure 5: Adding Scales\n\n\n\n\n\nLet’s create a bar plot of variable rank in similar steps on Salaries data.\n\nggplot(data = Salaries, mapping = aes(x=rank,fill = rank,colour = rank))+\n  geom_bar()+\n  scale_fill_brewer(palette=\"Dark2\")+\n  scale_color_brewer(palette=\"Dark2\")+\n  theme_bw() + \n  theme(legend.position=\"top\") \n\n\n\n\nCreating Bar Plot",
    "crumbs": [
      "Materials",
      "Introduction"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Visulaization with ggplot",
    "section": "",
    "text": "Creating clear and effective data visualizations is an important skill for any data scientist. This course will teach participants the key principles of data visualization and how to use the ggplot2library, along with useful extensions, to create high-quality plots efficiently. After completing the course, participants will have a strong understanding of how to make engaging and accessible visualizations. We will discuss the main concepts of the grammar of graphics and use hands-on examples to explore ggplot2’s utility to create multi-layered, more complex graphs.\n\n\n\nAble to do data formatting.\nUnderstanding the general concepts of ggplot2.\nLearning the many options of customizing a ggplot.\nLearning to plot multiple data visualization.\nGaining the major steps need to create engaging graphics.\nHands on workshop with a project component.\n\n\n\n\nThis course will be appropriate for you if you answer yes to these questions:\n\nDo you aim to build graphics in a fully reproducible way without the need to manually adjust details afterwards?\nAre you a biologist wanting to get make high quality graphics and learn bit of programming?",
    "crumbs": [
      "Course Description"
    ]
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "Data Visulaization with ggplot",
    "section": "",
    "text": "Able to do data formatting.\nUnderstanding the general concepts of ggplot2.\nLearning the many options of customizing a ggplot.\nLearning to plot multiple data visualization.\nGaining the major steps need to create engaging graphics.\nHands on workshop with a project component.",
    "crumbs": [
      "Course Description"
    ]
  },
  {
    "objectID": "index.html#is-this-course-for-me",
    "href": "index.html#is-this-course-for-me",
    "title": "Data Visulaization with ggplot",
    "section": "",
    "text": "This course will be appropriate for you if you answer yes to these questions:\n\nDo you aim to build graphics in a fully reproducible way without the need to manually adjust details afterwards?\nAre you a biologist wanting to get make high quality graphics and learn bit of programming?",
    "crumbs": [
      "Course Description"
    ]
  },
  {
    "objectID": "index.html#required-packages-to-be-installed",
    "href": "index.html#required-packages-to-be-installed",
    "title": "Data Visulaization with ggplot",
    "section": "Required Packages to be installed",
    "text": "Required Packages to be installed\n\ntidyverse\n\nRun this code to install the packages if needed:\npackages &lt;- c('tidyverse')\n\ninstall.packages(setdiff(packages, rownames(installed.packages())))  \n\nNote: This section will be updated.",
    "crumbs": [
      "Course Description"
    ]
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Schedule\n\n\n\n\n\nWeek\n\n\nTopic\n\n\n\n\n\n\nDay-0,1: Data Preperation and Introduction to ggplot2\n\n\nData transformation and introduction to ggplot2\n\n\n\n\n\nNo matching items\n\n\n\nNote: This section will be updated\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Schedule"
    ]
  }
]